plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
    id("com.gradleup.shadow") version "9.0.0-beta13"
}

group = 'sh.ashral'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.5-R0.1-SNAPSHOT")
    implementation 'dev.langchain4j:langchain4j-open-ai:1.0.0'
    implementation 'dev.langchain4j:langchain4j:1.0.0'

    implementation platform("org.hibernate.orm:hibernate-platform:6.6.15.Final")
    implementation "org.hibernate.orm:hibernate-core"
    implementation "jakarta.transaction:jakarta.transaction-api"
}

tasks {
    shadowJar {
        relocate 'dev.langchain4j', 'sh.ashral.shaded.dev.langchain4j'
        relocate 'org.hibernate', 'sh.ashral.shaded.org.hibernate'
        relocate 'jakarta', 'sh.ashral.shaded.jakarta'
        mergeServiceFiles()
        archiveClassifier.set('')
    }

    build {
        dependsOn(shadowJar)
    }
}

def targetJavaVersion = 23
java {
    sourceCompatibility = JavaVersion.toVersion(targetJavaVersion)
    targetCompatibility = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < JavaVersion.toVersion(targetJavaVersion)) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}
